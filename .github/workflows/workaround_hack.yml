name: Workaround/hack.  Build and run an example app with PyCrucible

on:
  push:
    branches:
      [External_example_repo,]
  workflow_dispatch:


jobs:
  windows:
    name: Windows
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable


      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: Swatinem/rust-cache@v2

      - name: Compile release build
        run: cargo build --release

      - name: Clone example project
        run: git clone https://github.com/JamesParrott/simple-python-project-for-PyCrucible/

      - name: Copy PyCrucible to project
        shell: bash
        run: cp ./target/release/pycrucible.exe simple-python-project-for-PyCrucible

      - name: Run PyCrucible
        shell: bash
        working-directory: simple-python-project-for-PyCrucible
        run: ./pycrucible.exe -e . -o cowsay.exe

      - name: Test cowsay.exe
        continue-on-error: true
        shell: bash
        working-directory: simple-python-project-for-PyCrucible
        run: ./cowsay.exe  

      # Workaround / hack ?
      - name: Copy main.py to payload
        shell: bash
        working-directory: simple-python-project-for-PyCrucible
        run: cp main.py payload

      - name: Test cowsay.exe
        shell: bash
        working-directory: simple-python-project-for-PyCrucible
        run: ./cowsay.exe  



  linux:
    name: Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable


      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: Swatinem/rust-cache@v2

      - name: Compile release build
        run: cargo build --release


      - name: Clone example project
        run: git clone https://github.com/JamesParrott/simple-python-project-for-PyCrucible/

      - name: Copy PyCrucible to project
        shell: bash
        run: cp ./target/release/pycrucible simple-python-project-for-PyCrucible

      - name: Run PyCrucible
        shell: bash
        working-directory: simple-python-project-for-PyCrucible
        run: ./pycrucible -e . -o cowsay


      - name: Test cowsay
        continue-on-error: true
        shell: bash
        working-directory: simple-python-project-for-PyCrucible
        run: ./cowsay 

      # Workaround / hack ?
      - name: Copy main.py to payload
        shell: bash
        working-directory: simple-python-project-for-PyCrucible
        run: cp main.py payload

      - name: Test cowsay
        shell: bash
        working-directory: simple-python-project-for-PyCrucible
        run: ./cowsay
          
      